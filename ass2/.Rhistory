# Get the meta data
data0 = read.table('CH16PR09')
# Get the meta data
data0 = read.table('CH16PR09.txt')
head(data0)
names(data0) = c('days','level','observation_numer')
head(data0)
sapply(data0, typeof)
data0$level = factor(data0$level)
sapply(data0, typeof)
data0$level = as.factor(data0$level)
typeof(data0$level)
class(data0$level)
qt
#a
my_precision = function(a,m,n){
s0 = 4.5
b = qt(1-a/2m,4n-3)
s = sqrt(3/2n*s0^2)
M = bs
}
M = b*s
#a
my_precision = function(a,m,n){
s0 = 4.5
b = qt(1-a/2m,4n-3)
s = sqrt(3/2n*s0^2)
M = b*s
}
b = qt(1-a/2*m,4*n-3)
s = sqrt(3/2*n*s0^2)
#a
my_precision = function(a,m,n){
s0 = 4.5
b = qt(1-a/2*m,4*n-3)
s = sqrt(3/2*n*s0^2)
M = b*s
}
my_precision(0.1,2,10)
#a
my_precision = function(a,m,n){
s0 = 4.5
b = qt(1-a/2*m,4*n-3)
s = sqrt(3/2*n*s0^2)
M = b*s
M
}
my_precision(0.1,2,10)
my_precision(0.1,2,100)
#a
my_precision = function(a,m,n){
s0 = 4.5
b = qt(1-a/2*m,4*n-3)
s = sqrt(3/(2*n)*s0^2)
M = b*s
M
}
my_precision(0.1,2,10)
my_precision(0.1,2,9)
my_precision(0.1,2,8)
my_precision(0.1,2,8)
#a
# Write a function to get the precision conveniently
my_precision = function(a,m,n,t){
s0 = 4.5
b = qt(1-a/2*m,(2+t)*n-3)
s = sqrt((t+1)/(t*n)*s0^2)
M = b*s
M
}
my_precision(0.1,2,8,t=2)
#b
my_precision(0,1,2,8,t=1)
#b
my_precision(0.1,2,8,t=1)
my_precision(0.1,2,7,t=1)
my_precision(0.1,2,6,t=1)
#b
my_precision(0.1,2,8,t=1)
my_precision(0.1,2,7,t=1)
my_precision(0.1,2,6,t=1)
#a
# Write a function to get the precision conveniently
my_precision = function(a,m,n,t){
s0 = 4.5
b = qt(1-a/2*m,(2+t)*n-3)
s = sqrt(((t+1)/(t*n))*s0^2)
M = b*s
M
}
my_precision(0.1,2,8,t=2)
my_precision(0.1,2,9,t=2)
my_precision(0.1,2,10,t=2)
#b
my_precision(0.1,2,8,t=1)
my_precision(0.1,2,9,t=1)
my_precision(0.1,2,10,t=1)
my_precision(0.1,2,11,t=1)
#c
my_precision(0.1,2,11,t=3)
my_precision(0.1,2,7,t=3)
my_precision(0.1,2,6,t=3)
my_precision(0.1,2,8,t=3)
my_precision(0.1,2,7,t=3)
my_precision(0.1,2,6,t=3)
View(data0)
# 18.6
# Get all the estimate and write them in the data frame:
data1 = data0
data1$fit = 0
View(data1)
mu1 = mean(data1$days[which(data1$level==1)])
c = tapply(data1$days,data1$level,mean)
c
c(mu1,mu2,mu3) =c
(mu1,mu2,mu3) =c
[mu1,mu2,mu3] =c
mu1,mu2,mu3 =c
data1$fit[which(data1$level==1)] = c[1]
data1$fit[which(data1$level==2)] = c[2]
data1$fit[which(data1$level==3)] = c[3]
View(data1)
data1$res = data1$days -data1$fit
plot(data1$level~data1$days)
plot(data1$level,data1$days)
data1$level = as.numeric(data1$level)
plot(data1$level,data1$days)
plot(data1$level,data1$rea)
plot(data1$level,data1$res)
plot(data1$level,data1$res, col = data1$level)
plot(data1$level,data1$res, col = data1$level)
data1$level = as.factor(data1$level)
aov.output = aov(days~level,data = data1)
summary(aov.output)
summary(aov.output)$sigma
aov.output$contrasts
View(data1)
plot(data1$level,data1$res,which = 1)
plot(data1$level,data1$res,which = 2)
plot(data1$level,as.numeric(data1$res),which = 2)
plot(as.numeric( data1$level),as.numeric(data1$res),which = 2)
plot(as.numeric( data1$level),as.numeric(data1$res),which = 3)
plot(as.numeric( data1$level),as.numeric(data1$res),which = 1)
plot(as.numeric( data1$level),as.numeric(data1$res),which = 2)
plot(as.numeric( data1$level),as.numeric(data1$res),which = 3)
plot(as.numeric( data1$level),as.numeric(data1$res),which = 4)
??qqplot
qqplot(as.numeric(data1$res),which = 4)
qqplot(as.numeric(data1$res),which = 1)
plot(data1$res,which = 1)
plot(data1$res,which = 2)
plot(data1$res,which = 3)
qqnorm(data1$res)
qqnorm(data1$res)
plot(aov.output)
qqnorm(data1$res)
??boxcox
?boxcox
boxcox(data1$res)
boxcox(aov.output)
library(MASS)
boxcox(aov.output)
qqnorm(data1$res)
cor(data1$fit,data1$res)
cor(zeros(n),data1$res)
?zeros
ones(n)
?zero
cor(rep(0,length(data1$days)),data1$res)
hist(data1$res)
qnorm
?qnorm
?pnorm
pnorm(0.5,mean =0, sd=1)
sorted = sort(data1$res)
sorted
pnorm(-9,mean =0, sd=1)
pnorm(-9,mean =0, sd=1)
sd(data1$res)
sorted = sort(data1$res/sd)
sd1 = sd(data1$res)
sorted = sort(data1$res/sd1)
sorted
pnorm(-2.11,mean =0, sd=1)
1/24
pnorm(-2.11,mean =0, sd=sd1)
pnorm(-2.11,mean =0, sd=1)
sorted = sort(data1$res/sd1)
sorted
pnorm(1/24,mean =0, sd=1)
pnorm(0.01,mean =0, sd=1)
pnorm(0.010,mean =0, sd=1)
qqnorm(data1$res)
x = qqnorm(data1$res)
summary(x)
sorted = sort(data1$res/sd1)
sorted
pnorm(-2.111,mean =0, sd=1)
1/24
qnorm(-2.111,mean =0, sd=1)
quantile(data1$res)
my_qnorm = function(x){
temp = c()
for i = 1:length(x){
temp[i] = pnorm(x[i], mean = 0, sd=1)
}
return(temp)
}
my_qnorm = function(x){
temp = c()
for i = 1:length(x){
temp[i] = pnorm(x[i], mean = 0, sd=1)
}
return(temp)
}
temp = c()
my_qnorm = function(x){
temp = c()
for (i in 1:length(x)){
temp[i] = pnorm(x[i], mean = 0, sd=1)
}
return(temp)
}
my_qnorm(sorted)
pnorm(-2.111,mean =0, sd=1)
temp1 = my_qnorm(sorted)
cor(temp1,sorted)
mse = sum(data1$res^2)/(length(data1$days)-3)
mse
sd1
pnorm(-2.111,mean =0, sd=1)
sd1 = sd(data1$res)
sorted = sort(data1$res/sqrt(mse))
my_qnorm = function(x){
temp = c()
for (i in 1:length(x)){
temp[i] = pnorm(x[i], mean = 0, sd=1)
}
return(temp)
}
temp1 = my_qnorm(sorted)
cor(temp1,sorted)
plot(data1$observation_numer, data1$days, col = data1$level)
?plot
plot(data1$observation_numer, data1$days, col = data1$level,type =n )
plot(data1$observation_numer, data1$days, col = data1$level,type =b )
plot(data1$observation_numer, data1$days, col = data1$level,type ='b' )
plot(data1$observation_numer, data1$days, col = data1$level )
library(ggplot2)
ggplot(data = data1, aes(x = observation_number, days))+geom_point()
ggplot(data = data1, aes(x = observation_numer, days))+geom_point()
ggplot(data = data1, aes(x = observation_numer, days))+geom_point()+facet_wrap()
ggplot(data = data1, aes(x = observation_numer, days))+geom_point()+facet_wrap(~levl)
ggplot(data = data1, aes(x = observation_numer, days))+geom_point()+facet_wrap(~level)
ggplot(data = data1, aes(x = observation_numer, days))+geom_line()+facet_wrap(~level)
ggplot(data = data1, aes(x = observation_numer, days))+geom_line()+facet_wrap(level~)
ggplot(data = data1, aes(x = observation_numer, days))+geom_line()+facet_grid(level~)
ggplot(data = data1, aes(x = observation_numer, days))+geom_line()+facet_grid(~level)
ggplot(data = data1, aes(x = observation_numer, days))+geom_line()+facet_grid(level~)
ggplot(data = data1, aes(x = observation_numer, days))+geom_line()+facet_grid(level~)
?facet_grid
ggplot(data = data1, aes(x = observation_numer, days))+geom_line()+facet_grid(level~.)
plot(data1$observation_numer, data1$days, col = data1$level )
plot(data1$observation_numer, data1$res, col = data1$level )
ggplot(data = data1, aes(x = observation_numer, y = res))+geom_line()+facet_grid(level~.)
plot(data1$observation_numer, data1$res, col = data1$level )
?plot
plot(data1$observation_numer, data1$res, col = data1$level, xlim = [-10,10] )
plot(data1$observation_numer, data1$res, col = data1$level, xlim = (-10,10) )
plot(data1$observation_numer, data1$res, col = data1$level, xlim = c(-1,10) )
plot(data1$observation_numer, data1$res, col = data1$level, ylim = c(-10,10) )
plot(data1$observation_numer, data1$res, col = data1$level)
plot(data1$observation_numer, data1$res)
, col = data1$level
plot(data1$observation_numer, data1$res, col = data1$level)
ggplot(data = data1, aes(x = observation_numer, y = res))+geom_line()+facet_grid(level~.)
ggplot(data = data1, aes(x = observation_numer, y = res))+geom_point()+facet_grid(level~.)
