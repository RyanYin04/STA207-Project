knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
mu = [5.1,6.3,7.99.5]
mu = [5.1,6.3,7.9,9.5]
mu = (5.1,6.3,7.9,9.5)
mu = (5.1 6.3 7.9 9.5)
mu = [5.1,6.3,7.9,9.5]
mu = c(5.1,6.3,7.9,9.5)
mu = c(5.1,6.3,7.9,9.5)
sigma = 2.8
mu = c(5.1,6.3,7.9,9.5)
sigma = 2.8
mu = c(5.1,6.3,7.9,9.5)
sigma = 2.8
mu = c(5.1,6.3,7.9,9.5)
sigma = 2.8
mu = c(5.1,6.3,7.9,9.5)
sigma = 2.8
r = 4
# b
n = 100
# b
# It is a balanced model, so the wieght shoulde be 1/4
Mu = (1/4)*(sum(mu))
E_MSTR = sigma^2 + sum(n*(mu - Mu)^2) / (r-1)
E_MSTR
E_MSE = sigma^2
E_MSTR/E_MSE
#------------------c----------------------------------
mu2 = c(5.1,5.6,9.0,9.5)
Mu2 = 1/4(sum(mu2))
Mu2 = 1/4*(sum(mu2))
E_MSTR = sigma^2 + sum(n*(mu2 - Mu2)^2) / (r-1)
E_MSTR
E_MSTR
E_MSTR = sigma^2 + sum(n*(mu - Mu)^2) / (r-1)
E_MSTR
E_MSTR2 = sigma^2 + sum(n*(mu2 - Mu2)^2) / (r-1)
E_MSTR2
#-------------------a---------------------------------
curve(dnorm(x, 4, 2), from = 0, to = 8)
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = 0, to = 8)
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = -10, to = 20)
curve(dnorm(x, 4, 2), from = 0, to = 8)
curve(dnorm(x, 4, 2), from = 0, to = 8)
?curve
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = -10, to = 20,ylab = type1)
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = -10, to = 20,ylab = 'type1')
?curve
curve(dnorm(x, 4, 2), from = 0, to = 8,add = T)
curve(dnorm(x, 4, sigma), from = 0, to = 8,add = T)
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = -10, to = 20,ylab = ' ')
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma),ylab = ' ')
, from = -10, to = 20
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = -10, to = 20,ylab = ' ')
curve(dnorm(x, 6.3, sigma), from = 0, to = 8,add = T,)
curve(dnorm(x, 6.3, sigma), from = -10, to = 20,add = T,)
curve(dnorm(x, 8.9, sigma), from = -10, to = 20,add = T,)
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = -10, to = 20,ylab = ' ')
curve(dnorm(x, 6.3, sigma), from = -10, to = 20,add = T,)
curve(dnorm(x, 7.9, sigma), from = -10, to = 20,add = T,)
curve(dnorm(x, 9.5, sigma), from = -10, to = 20,add = T)
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = -10, to = 20,ylab = ' ',col = 'r')
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = -10, to = 20,ylab = ' ',col = 'red')
curve(dnorm(x, 6.3, sigma), from = -10, to = 20,add = T, col = 'blue')
curve(dnorm(x, 7.9, sigma), from = -10, to = 20,add = T,col = 'green')
curve(dnorm(x, 9.5, sigma), from = -10, to = 20,add = T,col = 'purple')
data2 = data.frame(c1 = c(7.6,8.2,6.8,5.8,6.9,6.6,6.3,7.7,6.0), level = c(low))
data2 = data.frame(c1 = c(7.6,8.2,6.8,5.8,6.9,6.6,6.3,7.7,6.0), level = c('low'))
View(data2)
data2_low = data.frame(c1 = c(7.6,8.2,6.8,5.8,6.9,6.6,6.3,7.7,6.0), level = c('low'))
data2_moderate = data.frame(c1 = (6.7,8.1,9.4,8.6,7.8,7.7,8.9,7.9,8.3,8.7,7.1,8.4), level = c('moderate'))
data2_moderate = data.frame(c1 = (6.7,8.1,9.4,8.6,7.8,7.7,8.9,7.9,8.3,8.7,7.1,8.4), level = c('moderate'))
data2_moderate = data.frame(c1 = c(6.7,8.1,9.4,8.6,7.8,7.7,8.9,7.9,8.3,8.7,7.1,8.4), level = c('moderate'))
data2_high = data.frame(c1 = c(8.5,9.7,10.1,7.8,9.6,9.5),level = c('high'))
data2 = rbind(data2_low,data2_moderate,data2_high)
data2
data2$level = factor(data2$level)
level(data2$level)
levels(data2$level)
plot(data2$level,data2$c1)
plot(data2$level,data2$c1, which = 1)
plot(data2$level,data2$c1, which = 2)
plot(data2$level,data2$c1, which = 3)
data2_low = data.frame(c1 = c(7.6,8.2,6.8,5.8,6.9,6.6,6.3,7.7,6.0), level = c(1))
data2_moderate = data.frame(c1 = c(6.7,8.1,9.4,8.6,7.8,7.7,8.9,7.9,8.3,8.7,7.1,8.4),
level = c(2))
data2_high = data.frame(c1 = c(8.5,9.7,10.1,7.8,9.6,9.5),level = c(3))
data2 = rbind(data2_low,data2_moderate,data2_high)
data2
plot(data2$level,data2$c1 )
max(data2_low$c1)
v1 = max(data2_low$c1) - min(data2_low$c1)
v1
min(data2_low$c1)
v2 = max(data2_moderate$c1) - min(data2_moderate$c1)
v2
v3 = max(data2_high$c1) - min(data2_high$c1)
v3
mu1 = mean(data2$level[which(level == 1)])
mu1 = mean(data2$level[which(data2$level == 1)])
mu1 = mean(data2$level[which(data2$level == 1)])
mu2 = mean(data2$level[which(data2$level == 2)])
mu3 = mean(data2$level[which(data2$level == 3)])
mu1 = mean(data2$c1[which(data2$level == 1)])
mu2 = mean(data2$c1[which(data2$level == 2)])
mu3 = mean(data2$c1[which(data2$level == 3)])
#-------------------------c-------------------------------
data2$fitted = 0
data2$fitted[which(data2$level == 1)] = data2$c1[which(data2$level == 1)] - mu1
data2$fitted[which(data2$level == 2)] = data2$c1[which(data2$level == 2)] - mu2
data2$fitted[which(data2$level == 3)] = data2$c1[which(data2$level == 3)] - mu3
data2$fitted[which(data2$level == 1)] = mu1
data2$fitted[which(data2$level == 2)] = mu2
data2$fitted[which(data2$level == 3)] = mu3
data2$err = data2$c1 - data2$fitted
n1 = nrow(data2_low)
n2 = nrow(data2_moderate)
n3 = nrow(data2_high)
nt = n1+n2+n3
r = 3
sum(data2$err)
?anova
data2$level = factor(data2$level)
aov(c1~level,data = data2)
aov(c1~f(level),data = data2)
y_bar = mean(data2$c1)
sstr = sum((data2$fitted-data2$c1)^2)
sse = sum(data2$err^2)
mstr = sstr / (r-1)
mse = sse/(nt -t)
mse = sse/(nt -r)
f = mstr/mse
f
mstr = sstr / (r-1)
mstr
mse
# F = 12
?qf
# F = 12
qf(0.01, r-1, nt-r)
?cdf
?pf
pf(f,r-1,nt-r)
#-------------------a---------------------------------
curve(dnorm(x, 5.1, sigma), from = -10, to = 20,ylab = ' ',col = 'red')
curve(dnorm(x, 6.3, sigma), from = -10, to = 20,add = T, col = 'blue')
curve(dnorm(x, 7.9, sigma), from = -10, to = 20,add = T,col = 'green')
curve(dnorm(x, 9.5, sigma), from = -10, to = 20,add = T,col = 'purple')
#------------------ b---------------------------------
# It is a balanced model, so the wieght shoulde be 1/4
Mu = (1/4)*(sum(mu))
n = 100
E_MSTR = sigma^2 + sum(n*(mu - Mu)^2) / (r-1)
E_MSE = sigma^2
E_MSTR2 = sigma^2 + sum(n*(mu2 - Mu2)^2) / (r-1)
E_MSTR2
E_MSTR2 = sigma^2 + sum(n*(mu2 - Mu2)^2) / (r-1)
E_MSTR2
E_MSTR2 = sigma^2 + sum(n*(mu2 - Mu2)^2) / (r-1)
E_MSTR = sigma^2 + sum(n*(mu - Mu)^2) / (r-1)
E_MSTR
sigma = 2.8
E_MSTR2 = sigma^2 + sum(n*(mu2 - Mu2)^2) / (r-1)
E_MSTR2
mu = c(5.1,6.3,7.9,9.5)
sigma = 2.8
r = 4
#------------------ b---------------------------------
# It is a balanced model, so the wieght shoulde be 1/4
Mu = (1/4)*(sum(mu))
n = 100
E_MSTR = sigma^2 + sum(n*(mu - Mu)^2) / (r-1)
E_MSTR
E_MSE = sigma^2
#------------------c----------------------------------
mu2 = c(5.1,5.6,9.0,9.5)
Mu2 = 1/4*(sum(mu2))
E_MSTR2 = sigma^2 + sum(n*(mu2 - Mu2)^2) / (r-1)
E_MSTR2
data2 = read.table("CH16PR09.text")
data2 = read.table("CH16PR09.txt")
View(data2)
names(data2) = c('days','fitness_level','sample_size')
n1 = sum(data2$sample_size[which(data2$fitness_level == 1)])
n2 = sum(data2$sample_size[which(data2$fitness_level == 2)])
n3 = sum(data2$sample_size[which(data2$fitness_level == 3)])
plot(data2$days,data2$fitness_level )
plot(data2$fitness_level,data2$days )
nt = n1+n2+n3
r = 3
data2_low = data2[which(data2$fitness_level==1),]
data2_moderate = data2[which(data2$fitness_level==2),]
data2_high = data2[which(data2$fitness_level==3),]
fit1 = mean(data2_low$days)
fit2 = mean(data2_moderate$days)
fit1 = mean(data2_high$days)
fit1 = mean(data2_low$days)
fit2 = mean(data2_moderate$days)
fit3 = mean(data2_high$days)
data2$fit = 0
data2$fit[which(data2$fitness_level==1)] == fit1
data2$fit[which(data2$fitness_level==1)] = fit1
data2$fit[which(data2$fitness_level==2)] = fit2
data2$fit[which(data2$fitness_level==3)] = fit3
fit1 = mean(data2_low$days)
fit2 = mean(data2_moderate$days)
fit3 = mean(data2_high$days)
data2$residual = data2$days - data2$fit
sum(data2$residual)
#-----------------------e--------------------------------
Mu = sum(data2$days)/nt
sstr = sum((data2$fit-Mu)^2)
sse = sum(data2$residual^2)
sse = sum(data2$residual^2)
mstr = sstr / (r-1)
mse = sse/(nt -r)
f = mstr/mse
f
nt = nrow(data2)
r = 3
#-----------------------e--------------------------------
Mu = sum(data2$days)/nt
sstr = sum((data2$fit-Mu)^2)
sse = sum(data2$residual^2)
mstr = sstr / (r-1)
mse = sse/(nt -r)
f = mstr/mse
f
# ================================================================
# 17.10
#-----------------------a
?TukeyHSD
fit1 = aov(days~fitness_level, data = data2)
fit1
data2$fitness_level = factor(data2$fitness_level)
fit1 = aov(days~fitness_level, data = data2)
fit1
TukeyHSD(fit1,conf.level = 0.95)
??Bonferroni
?pairwise.t.test
pairwise.t.test(data2$days,data2$level, p.adjust.method = 'Bonferroni')
pairwise.t.test(data2$days,data2$level, p.adjust.method = 'bonferroni')
pairwise.t.test(x = data2$days,g = data2$fitness_level, p.adjust.method = 'bonferroni')
# ================================================================
# 17.10
#-----------------------a-----------------------------
head(data2)
mu1 = mean(data2_low$days)
mu2 = mean(data2_moderate$days)
mu3 = mean(data2_high$days)
plot([1,2,3],[mu1,mu2,mu3])
plot(c(1,2,3),c(mu1,mu2,mu3))
plot(c(1,2,3),c(mu1,mu2,mu3),xlab = 'level', ylab = 'days')
plot(c(1,2,3),c(mu1,mu2,mu3),xlab = 'level', ylab = 'days',type = 'o')
plot(c(1,2,3),c(mu1,mu2,mu3),xlab = 'level - i', ylab = 'days',type = 'o')
#------------------------b-----------------------------
n1 = nrow(data2_low)
n2 = nrow(data2_moderate)
n3 = nrow(data2_high)
mse = sum((data2$days - data2$fit)^2)/(nt - r)
#-------------------------b-------------------------------
data2_low = data2[which(data2$fitness_level==1),]
data2_moderate = data2[which(data2$fitness_level==2),]
data2_high = data2[which(data2$fitness_level==3),]
mse1 = sum((data2_moderate$days - data2_moderate$fit)^2)/(nt - r)
mse1 = sum((data2_moderate$days - data2_moderate$fit)^2)/(nt - r)
mse1
qt(0.995,nt-r)
lb1 = -qt1*mse1+data2$fit[1]
qt1 = qt(0.995,nt-r)
lb1 = -qt1*mse1+data2$fit[1]
ub1 =  qt1*mse1+data2$fit[1]
lb1 = -qt1*mse1+data2$fit[1]
lb1
ub1
s1 = sqrt(mse1)
ub1 =  qt1*s1+data2$fit[1]
lb1 = -qt1*s1+data2$fit[1]
ub1 =  qt1*s1+data2$fit[1]
lb1
ub1
s1
mse2 = sum((data2_moderate$days - data2_moderate$fit)^2)/(nt - r)
s2 = sqrt(mse1)
qt2 = qt(0.995,nt-r)
lb2 = -qt1*s1+data2$fit[1]
ub2 =  qt1*s1+data2$fit[1]
s2
#------------------------c-----------------------------
mse = sum(data2$residual^2)/(nt-r)
sl1 = (1/n2 - 1/n3)mse
sl1 = (1/n2 - 1/n3)*mse
sl2 = (1/n1 - 1/n2)*mse
sl1 = (1/n2 + 1/n3)*mse
sl2 = (1/n1 + 1/n2)*mse
b = qt(1-0.05/4, nt-r)
b
qt
?qt
b = qt(p = 1-0.05/4, df = nt-r)
b
mse
mu2-mu3
mu1-mu2
df1 = mu2-mu3
df2 = mu1-mu2
c(df1-b*sl1,df1+b*sl1)
c(df2-b*sl2,df2+b*sl2)
b*sl1
1/n2 + 1/n3
mse
data2$fitness_level = factor(data2$fitness_level)
fit1 = aov(days~fitness_level, data = data2)
fit1
TukeyHSD(fit1,conf.level = 0.95)
20.05870-14
sl1 = sqrt((1/n2 + 1/n3)*mse)
sl2 = sqrt((1/n1 + 1/n2)*mse)
b = qt(p = 1-0.05/4, df = nt-r)
b
b*sl1
df1 = mu2-mu3
df2 = mu1-mu2
c(df1-b*sl1,df1+b*sl1)
c(df2-b*sl2,df2+b*sl2)
b
b*sl1
TukeyHSD(fit1,conf.level = 0.95)
11.32141-6
5.32141/sl2
#=================================================
#17.15
sl3 = mse*(1/n1+4/n2+1/n3)
#=================================================
#17.15
sl3 = sqrt(mse*(1/n1+4/n2+1/n3))
mse*(1/n1+4/n2+1/n3)
nt-r
qt(0.995,21)
qt2 = qt(0.995,21)
l3 = mu1-2*mu2+mu3
c(l3-qt2*sl3,l3+qt2*sl3)
s1d1 = sqrt(mse*(1/n1+1/n2))
s1d1 = sqrt(mse*(1/n1+1/n2))
s1d2 = sqrt(mse*(1/n1+1/n3))
s1d3 = sqrt(mse*(1/n2+1/n3))
s1d4 = sl3
B=qt(1-0.05/8, nt-r)
B
sld1
sld1
s1d1 = sqrt(mse*(1/n1+1/n2))
s1d2 = sqrt(mse*(1/n1+1/n3))
s1d3 = sqrt(mse*(1/n2+1/n3))
s1d4 = sl3
sld1
B=qt(1-0.05/8, nt-r)
s1d1
s1d2
s1d3
s1d4
B=qt(1-0.05/8, nt-r)
B
mu1-mu2
mu2-mu3
mu1-mu3
mu1-2*mu2-mu3
mu1-2*mu2+mu3
dff1 = mu1-mu2
dff2 = mu1-mu3
dff3 = mu2-mu3
dff4 = mu1-2*mu2+mu3
c(dff1-B*s1d1,dff1+B*s1d1)
c(dff2-B*s1d2,dff2+B*s1d2)
c(dff3-B*s1d3,dff3+B*s1d3)
c(dff4-B*s1d4,dff4+B*s1d4)
#=================================================
#16.26
sigma = 4.5
sigma^2
mu = sum(n1/nt*mu1+n2/nt*mu2+n3/nt*mu3)
mu
mu = n1/nt*mu1+n2/nt*mu2+n3/nt*mu3
mu
mu1 = 7
mu2 = 8
mu3 = 9
mu = n1/nt*mu1+n2/nt*mu2+n3/nt*mu3
mu
mstr = (n1*(mu1-mu)^2+n2*(mu2-mu)^2+n3*(mu3-mu)^2)/(r-1)
mstr = (n1*(mu1-mu)^2+n2*(mu2-mu)^2+n3*(mu3-mu)^2)/(r-1)
mstr
data2$newfit = 0
data2$newfit[which(data2$fitness_level==1)]==7
data2$newfit[which(data2$fitness_level==2)]==8
data2$newfit[which(data2$fitness_level==3)]==9
data2$newfit[which(data2$fitness_level==1)]=7
data2$newfit[which(data2$fitness_level==2)]=8
data2$newfit[which(data2$fitness_level==3)]=9
#=================================================
#16.26
sigma = 4.5
sigma^2
mu1 = 37
mu2 = 35
mu3 = 28
mu = n1/nt*mu1+n2/nt*mu2+n3/nt*mu3
mu
mstr = (n1*(mu1-mu)^2+n2*(mu2-mu)^2+n3*(mu3-mu)^2)/(r-1)
mstr
data2$newfit = 0
data2$newfit[which(data2$fitness_level==1)]=7
data2$newfit[which(data2$fitness_level==2)]=8
data2$newfit[which(data2$fitness_level==3)]=9
data2$newfit[which(data2$fitness_level==1)]=37
data2$newfit[which(data2$fitness_level==2)]=35
data2$newfit[which(data2$fitness_level==3)]=28
data2$newres = data2$days-data2$newfit
sse = sum(data2$newres^2)
mse = sse/(nt-r)
mse
mstr/mse
qf(0.99,2,21)
?qf
pf(mstr/mse,2,21)
qf(0.05,2,21)
qf(0.99,2,21)
#=================================================
#16.26
sigma = 4.5
sigma^2
mu1 = 37
mu2 = 35
mu3 = 28
mu = n1/nt*mu1+n2/nt*mu2+n3/nt*mu3
mu
mstr = (n1*(mu1-mu)^2+n2*(mu2-mu)^2+n3*(mu3-mu)^2)/(r-1)
mstr
data2$newfit = 0
data2$newfit[which(data2$fitness_level==1)]=37
data2$newfit[which(data2$fitness_level==2)]=35
data2$newfit[which(data2$fitness_level==3)]=28
data2$newres = data2$days-data2$newfit
sse = sum(data2$newres^2)
mse = sse/(nt-r)
mse
mu
mstr/mse
qf(0.99,2,21)
