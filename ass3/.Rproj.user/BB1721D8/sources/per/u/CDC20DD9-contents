library(MASS)
library(ggplot2)
library(onewaytests)



# 19.18
data1 = read.csv('Data19.18.csv')
data1$Duration = factor(data1$Duration)
data1$Weight.Gain = factor(data1$Weight.Gain)
data1$Y = data1$Ã¯..Y
data1 = data1[,2:5]


data1$logy = log10(data1$Y+1)
fit1 = aov(logy~Duration+Weight.Gain,data = data1)
summary(fit1)
fit_val = fit1$fitted.values
res = fit1$residuals
res


my_qnorm = function(x){
    temp = c()
    for (i in 1:length(x)){
        temp[i] = pnorm(x[i], mean = 0, sd=1)
    }
    return(temp)
}
res_ordered=sort(res/sd(res))
res_ordered

length(res_ordered)
actual = (seq(60)-0.1)/60
actual
expect_value = qnorm(actual,mean = 0, sd = 1)
expect_value
cor(expect_value, res_ordered)

# 19.19
summary(fit1)
fit_inter = aov(logy~Duration*Weight.Gain,data = data1)
summary(fit_inter)





#====================
# 21.7
data2 = read.csv('Data21,7.csv')
data2$Fat = as.factor(data2$Fat)
data2$Block = as.factor(data2$Block)


fit2 = aov(Lipid~Fat+Block,data = data2)
fit2


plot(fit2$fitted.values,fit2$residuals)
plot(fit2,which = 2)

data2$fit = fit2$fitted.values
ggplot(data = data2)+ geom_line(aes(x = Fat, y = fit, group = Block))

# Tukey test:
mu = mean(data2$Lipid)
alpha = tapply(data2$Lipid, data2$Block,mean)-mu
beta = tapply(data2$Lipid, data2$Fat,mean)-mu
data2$alpha = 0

for (i in 1:5){
    data2$alpha[which(data2$Block == i)] = alpha[i]
}
data2$beta = 0
for (i in 1:3){
    data2$beta[which(data2$Fat == i)] = beta[i]
}
data2$ab = data2$Lipid*data2$alpha*data2$beta
D = sum(data2$ab)/sum(alpha^2)*sum(beta^2)
D
ssab = D^2*sum(alpha^2)*sum(beta^2)
ssab
    

summary(fit2)
ssto = 1.4190+1.3203+0.0192
ssa = 1.4190
ssb = 1.3203
ssr = ssto-ssa-ssb-ssab
f = ssab/(ssr/15-3-5)
f
pf(f,df1 = 1,df2 = 7)



#============================
#21.8
summary(fit2)

# Test treatment:(3 levels)
mse= 0.0024
d1 = beta[1]-beta[2]
d2 = beta[1] - beta[3]
d3 = beta[2] - beta[3]
s = sqrt((2/3)*mse)
qtukey(1-0.05,nmeans = 3,df = 8)
